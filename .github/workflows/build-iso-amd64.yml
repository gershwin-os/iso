name: Build ISO on Debian 12 AMD64 and ARM64

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm-slim
      options: >-
        --privileged
        --name debian
      ports:
        - 8080:8080
    steps:
      - name: Install packages for workflow
        run: |
          apt-get update
          apt install -y curl jq unzip
      - name: Get latest AMD64 workflow run ID
        id: get_latest_amd64_run
        run: |
          latest_run_amd64=$(curl -s -X GET -u ${{ secrets.GH_TOKEN }} "https://api.github.com/repos/gershwin-os/root/actions/workflows/Build%20root%20on%20Debian%2012%20AMD64/runs?status=success&per_page=1" | jq -r '.workflow_runs[0].id')
          echo "Latest AMD64 run ID: $latest_run_amd64"
          echo "AMD64_RUN_ID=$latest_run_amd64" >> $GITHUB_ENV
        shell: bash
      - name: Get latest ARM64 workflow run ID
        id: get_latest_arm64_run
        run: |
          latest_run_arm64=$(curl -s -X GET -u ${{ secrets.GH_TOKEN }} "https://api.github.com/repos/gershwin-os/root/actions/workflows/Build%20root%20on%20Debian%2012%20ARM64/runs?status=success&per_page=1" | jq -r '.workflow_runs[0].id')
          echo "Latest ARM64 run ID: $latest_run_arm64"
          echo "ARM64_RUN_ID=$latest_run_arm64" >> $GITHUB_ENV
        shell: bash
      - name: Get AMD64 artifact URL
        id: get_amd64_artifact_url
        run: |
          artifact_url_amd64=$(curl -s -X GET -u ${{ secrets.GH_TOKEN }} "https://api.github.com/repos/gershwin-os/root/actions/runs/${{ env.AMD64_RUN_ID }}/artifacts" | jq -r '.artifacts[0].archive_download_url')
          echo "AMD64 Artifact URL: $artifact_url_amd64"
          echo "AMD64_ARTIFACT_URL=$artifact_url_amd64" >> $GITHUB_ENV
        shell: bash
      - name: Get ARM64 artifact URL
        id: get_arm64_artifact_url
        run: |
          artifact_url_arm64=$(curl -s -X GET -u ${{ secrets.GH_TOKEN }} "https://api.github.com/repos/gershwin-os/root/actions/runs/${{ env.ARM64_RUN_ID }}/artifacts" | jq -r '.artifacts[0].archive_download_url')
          echo "ARM64 Artifact URL: $artifact_url_arm64"
          echo "ARM64_ARTIFACT_URL=$artifact_url_arm64" >> $GITHUB_ENV
        shell: bash
      - name: Download AMD64 artifact
        run: |
          curl -s -o root_amd64.zip -L -u ${{ secrets.GH_TOKEN }} "${{ env.AMD64_ARTIFACT_URL }}"
        shell: bash
      - name: Download ARM64 artifact
        run: |
          curl -s -o root_arm64.zip -L -u ${{ secrets.GH_TOKEN }} "${{ env.ARM64_ARTIFACT_URL }}"
        shell: bash
      - name: Build ISO on Debian 12 AMD64
        run: |
          ls -la
          du -h -s *
          unzip root_amd64.zip
          ls -la
        continue-on-error: true
      - name: Build ISO on Debian 12 ARM64
        run: |
          ls -la
          du -h -s *
          unzip root_arm64.zip
          ls -la
        continue-on-error: true